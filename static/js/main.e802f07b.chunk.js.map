{"version":3,"sources":["components/footer/footer.component.tsx","actions/index.ts","components/filter_group/filter_group.component.tsx","components/pagination/pagination.component.tsx","components/repository_card/repository_card.component.tsx","components/repository_list/repository_list.component.tsx","components/search_input/search_input.component.tsx","views/home_page/home_page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FooterComponent","className","css","src","href","fetchRepositories","fromDate","currentPage","lang","searchQuery","query","toLowerCase","url","Promise","resolve","reject","fetch","then","res","json","result","setRepositories","items","setTotalPages","total_count","catch","error","totalPages","localStorage","setItem","String","repositories","JSON","stringify","getRepositories","results","getItem","parse","FilterGroup","props","React","useState","selectedLang","setSelectedLang","filterGroupStyle","onClick","onFilterLanguage","undefined","LANGUAGES","map","index","Pagination","setCurrentPage","pageKeys","Array","keys","i","renderPageItem","item","onPageChanged","PaginationStyle","RepositoryCard","id","html_url","description","stargazers_count","full_name","language","updated_at","rated","star","setStar","repositoryCardStyle","repositoryList","selectedRepository","find","toggleStar","moment","format","RepositoryList","repositoryListStyle","SearchInput","searchValue","setSearchValue","searchInputStyle","type","placeholder","onChange","e","target","value","onSearch","HomePage","repoResults","setResults","currentLang","setCurrentLang","fetchData","page","a","add","Math","min","floor","useEffect","cachedResults","length","pages","getTotalPages","homePageStyle","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e802f07b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { css } from \"@emotion/css\";\r\nconst footerComponentStyle = () =>\r\n  css`\r\n    label: footer-wrapper;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 20px 0;\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n      border-radius: 15px;\r\n      padding-bottom: 8px;\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      padding-left: 4px;\r\n      color: #a38e80;\r\n    }\r\n  `;\r\nexport const FooterComponent = () => {\r\n  return (\r\n    <footer className={footerComponentStyle()}>\r\n      <img src=\"https://media0.giphy.com/media/mVJ5xyiYkC3Vm/giphy.gif?cid=790b7611ad2812b1ccf7f99cf2e9764d8ac87928c092140a&rid=giphy.gif\" />\r\n      <small>\r\n        Â© 2021 by\r\n        <a href=\"https://huocha.github.io/git-trending/\">JASMINE NG </a>\r\n      </small>\r\n    </footer>\r\n  );\r\n};\r\n","import { RepositoryCardProps } from \"../components/repository_card/repository_card.interface\";\r\n\r\nexport const fetchRepositories = (\r\n  fromDate: string,\r\n  currentPage: number,\r\n  lang?: string,\r\n  searchQuery?: string\r\n): Promise<{ total_count: number; items: RepositoryCardProps[] }> => {\r\n  let query = `q=created:>${fromDate}`;\r\n  if (lang) {\r\n    query += `+language:${lang.toLowerCase()}`;\r\n  }\r\n  if (searchQuery) {\r\n    query += searchQuery;\r\n  }\r\n  const url = `https://api.github.com/search/repositories?${query}&sort=stars&order=desc&page=${currentPage}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        resolve(result);\r\n        setRepositories(result?.items);\r\n        setTotalPages(result?.total_count);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const setTotalPages = (totalPages: number): void => {\r\n  localStorage.setItem(\"totalPages\", String(totalPages));\r\n};\r\n\r\nexport const getTotalPages = (): number => {\r\n  const pages = localStorage.getItem(\"totalPages\") ?? \"\";\r\n  return JSON.parse(pages);\r\n};\r\n\r\nexport const setRepositories = (repositories: RepositoryCardProps[]): void => {\r\n  if (repositories) {\r\n    localStorage.setItem(\"repositories\", JSON.stringify(repositories));\r\n  }\r\n};\r\n\r\nexport const getRepositories = (): RepositoryCardProps[] => {\r\n  const results = localStorage.getItem(\"repositories\") ?? \"[]\";\r\n  return JSON.parse(results);\r\n};\r\n\r\nexport const toggleStar = (id: string): void => {\r\n  const repositoryList = getRepositories();\r\n  const selectedRepository = repositoryList.find((item) => item.id === id);\r\n  if (selectedRepository) {\r\n    if (selectedRepository.rated) {\r\n      selectedRepository.stargazers_count -= 1;\r\n      selectedRepository.rated = false;\r\n    } else {\r\n      selectedRepository.stargazers_count += 1;\r\n      selectedRepository.rated = true;\r\n    }\r\n  }\r\n\r\n  setRepositories(repositoryList);\r\n};\r\n","import React from \"react\";\r\nimport { css } from \"@emotion/css\";\r\nimport { FilterGroupProps } from \"./filter_group.interface\";\r\n\r\nconst FilterGroup = (props: FilterGroupProps) => {\r\n  const [selectedLang, setSelectedLang] = React.useState<string>();\r\n\r\n  const renderLanguageOptions = () => {\r\n    return (\r\n      <div className=\"languages-list\">\r\n        <div\r\n          className={`language-item ${!selectedLang && \"selected\"}`}\r\n          onClick={() => {\r\n            props.onFilterLanguage(\"\");\r\n            setSelectedLang(undefined);\r\n          }}\r\n        >\r\n          Any\r\n        </div>\r\n        {LANGUAGES.map((lang, index) => {\r\n          return (\r\n            <div\r\n              className={`language-item ${\r\n                selectedLang === lang ? \"selected\" : \"\"\r\n              } `}\r\n              key={index}\r\n              onClick={() => {\r\n                props.onFilterLanguage(lang);\r\n                setSelectedLang(lang);\r\n              }}\r\n            >\r\n              {lang}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={filterGroupStyle()}>\r\n      <div>\r\n        <small>Languages: </small>\r\n      </div>\r\n      {renderLanguageOptions()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterGroup;\r\n\r\nconst filterGroupStyle = () => css`\r\n  label: filter-group;\r\n  display: flex;\r\n  padding-top: 12px;\r\n  .languages-list {\r\n    padding-left: 4px;\r\n    display: flex;\r\n    .language-item {\r\n      padding: 2px 8px;\r\n      &: hover {\r\n        cursor: pointer;\r\n        background: rgba(27, 31, 35, 0.05);\r\n      }\r\n    }\r\n    .selected {\r\n      background: rgba(27, 31, 35, 0.08);\r\n    }\r\n  }\r\n`;\r\n\r\nconst LANGUAGES = [\"JavaScript\", \"Ruby\", \"HTML\", \"CSS\", \"Typescript\", \"Java\"];\r\n","import { css } from \"@emotion/css\";\r\nimport React from \"react\";\r\nimport { PaginationProps } from \"./pagination.interface\";\r\n\r\nconst Pagination = (props: PaginationProps) => {\r\n  const { totalPages } = props;\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n  const pageKeys = [...Array(totalPages).keys()].map((i) => i + 1);\r\n\r\n  const renderPageItem = (item: number) => {\r\n    return (\r\n      <div\r\n        key={item}\r\n        className={`page-item ${currentPage === item ? \"selected\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentPage(item);\r\n          props.onPageChanged(item);\r\n        }}\r\n      >\r\n        {item}\r\n      </div>\r\n    );\r\n  };\r\n  const renderPagination = () => {\r\n    return <>{pageKeys.map(renderPageItem)}</>;\r\n  };\r\n  return <div className={PaginationStyle()}>{renderPagination()}</div>;\r\n};\r\n\r\nexport default Pagination;\r\n\r\nconst PaginationStyle = () => css`\r\n  label: pagination-card;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-bottom: 15px;\r\n  .selected {\r\n    background: rgba(27, 31, 35, 0.08);\r\n  }\r\n  .page-item {\r\n    padding: 0 5px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background: rgba(27, 31, 35, 0.05);\r\n    }\r\n  }\r\n`;\r\n","import { css } from \"@emotion/css\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { toggleStar } from \"../../actions\";\r\nimport { RepositoryCardProps } from \"./repository_card.interface\";\r\n\r\nconst RepositoryCard = (props: RepositoryCardProps) => {\r\n  const {\r\n    id,\r\n    html_url,\r\n    description,\r\n    stargazers_count,\r\n    full_name,\r\n    language,\r\n    updated_at,\r\n    rated,\r\n  } = props;\r\n  const [star, setStar] = React.useState(rated ? 1 : 0);\r\n\r\n  const onStarClick = () => {\r\n    toggleStar(id);\r\n    setStar(star ? 0 : 1);\r\n  };\r\n\r\n  return (\r\n    <div className={repositoryCardStyle()}>\r\n      <div className=\"repo-left\">\r\n        <div className=\"repo-star\" onClick={onStarClick}>\r\n          <div className=\"repo-star-number\">{stargazers_count + star}</div>\r\n          <span>{stargazers_count + star > 1 ? \"stars\" : \"star\"}</span>\r\n        </div>\r\n        <div className=\"repo-main\">\r\n          <a href={html_url}>{full_name}</a>\r\n          <div>{description}</div>\r\n          <small>Updated at: {moment(updated_at).format(\"DD MMM YYYY\")}</small>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"repo-outro\">\r\n        <div>{language}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepositoryCard;\r\n\r\nconst repositoryCardStyle = () => css`\r\n  label: repository-card;\r\n  display: flex;\r\n  border-radius: 5px;\r\n  border: 1px solid rgb(232, 232, 232);\r\n  padding: 6px;\r\n  margin: 15px 0;\r\n  flex: 1;\r\n  justify-content: space-between;\r\n  text-align: left;\r\n  font-size: 13px;\r\n  .repo-left {\r\n    display: flex;\r\n    flex-basis: 90%;\r\n  }\r\n  .repo-outro {\r\n    flex-basis: 10%;\r\n  }\r\n  .repo-star {\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 10%;\r\n    .repo-star-number {\r\n      font-size: 22px;\r\n    }\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: #388bfd;\r\n    }\r\n  }\r\n  .repo-main {\r\n    padding-left: 8px;\r\n    max-width: 86%;\r\n    max-height: 51px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n","import { css } from \"@emotion/css\";\r\nimport React from \"react\";\r\nimport RepositoryCard from \"../repository_card/repository_card.component\";\r\nimport { RepositoryListProps } from \"./repository_list.interface\";\r\n\r\nconst RepositoryList = (props: RepositoryListProps) => {\r\n  const { items } = props;\r\n\r\n  return (\r\n    <div className={repositoryListStyle()}>\r\n      {items.map((item, index) => (\r\n        <RepositoryCard key={index} {...item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepositoryList;\r\n\r\nconst repositoryListStyle = () => css`\r\n  label: repository-list;\r\n`;\r\n","import { css } from \"@emotion/css\";\r\nimport React from \"react\";\r\nimport { SearchInputProps } from \"./search_input.interface\";\r\n\r\nconst SearchInput = (props: SearchInputProps) => {\r\n  const [searchValue, setSearchValue] = React.useState<string>(\"\");\r\n\r\n  return (\r\n    <div className={searchInputStyle()}>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-term\"\r\n            placeholder=\"Search ...\"\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"searchButton\"\r\n            onClick={() => props.onSearch(searchValue)}\r\n          >\r\n            <i className=\"fa fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n\r\nconst searchInputStyle = () => css`\r\n  label: search-input;\r\n\r\n  .search {\r\n    width: 100%;\r\n    display: flex;\r\n  }\r\n\r\n  .search-term {\r\n    width: 100%;\r\n    border: 3px solid #388bfd;\r\n    border-right: none;\r\n    padding: 5px;\r\n    height: 20px;\r\n    border-radius: 5px 0 0 5px;\r\n    outline: none;\r\n    &:focus {\r\n      color: #388bfd;\r\n    }\r\n  }\r\n\r\n  .searchButton {\r\n    width: 40px;\r\n    height: 36px;\r\n    border: 1px solid #388bfd;\r\n    background: #388bfd;\r\n    text-align: center;\r\n    color: #fff;\r\n    border-radius: 0 5px 5px 0;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import { css } from \"@emotion/css\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport {\r\n  fetchRepositories,\r\n  getRepositories,\r\n  getTotalPages,\r\n} from \"../../actions\";\r\nimport FilterGroup from \"../../components/filter_group/filter_group.component\";\r\nimport Pagination from \"../../components/pagination/pagination.component\";\r\nimport { RepositoryCardProps } from \"../../components/repository_card/repository_card.interface\";\r\nimport RepositoryList from \"../../components/repository_list/repository_list.component\";\r\nimport SearchInput from \"../../components/search_input/search_input.component\";\r\n\r\nconst HomePage = () => {\r\n  const [repoResults, setResults] = React.useState<RepositoryCardProps[]>([]);\r\n  const [totalPages, setTotalPages] = React.useState(1);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [currentLang, setCurrentLang] = React.useState(\"\");\r\n\r\n  const fetchData = async (\r\n    page: number,\r\n    lang?: string,\r\n    searchQuery?: string\r\n  ) => {\r\n    const fromDate = moment().add(-1, \"w\").format(\"YYYY-MM-DD\");\r\n    const result = await fetchRepositories(fromDate, page, lang, searchQuery);\r\n    const { items, total_count } = result;\r\n    setTotalPages(Math.min(Math.floor(total_count / 30), 10));\r\n    setResults(items);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const cachedResults = getRepositories();\r\n    if (cachedResults?.length) {\r\n      setResults(cachedResults);\r\n      setTotalPages(getTotalPages());\r\n    } else {\r\n      fetchData(1);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={homePageStyle()}>\r\n      <div className=\"header\">\r\n        <h1>Git-Trending</h1>\r\n      </div>\r\n      <SearchInput\r\n        onSearch={(value) => {\r\n          fetchData(currentPage, currentLang, value);\r\n        }}\r\n      />\r\n      <FilterGroup\r\n        onFilterLanguage={(lang) => {\r\n          setCurrentLang(lang);\r\n          fetchData(currentPage, lang);\r\n        }}\r\n      />\r\n      <RepositoryList items={repoResults} />\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        onPageChanged={(page) => {\r\n          setCurrentPage(page);\r\n          fetchData(page, currentLang);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst homePageStyle = () => css`\r\n  label: home-page;\r\n  max-width: 780px;\r\n  margin: auto;\r\n`;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport HomePage from \"./views/home_page/home_page\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n      <FooterComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}