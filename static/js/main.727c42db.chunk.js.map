{"version":3,"sources":["components/footer/footer.component.tsx","actions/index.ts","components/context.ts","components/filter_group/filter_group.component.tsx","components/pagination/pagination.component.tsx","components/repository_card/repository_card.component.tsx","components/repository_list/repository_list.component.tsx","components/search_input/search_input.component.tsx","views/home_page/home_page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FooterComponent","className","css","alt","src","href","fetchRepositories","fromDate","currentPage","lang","searchQuery","query","toLowerCase","url","Promise","resolve","reject","fetch","then","res","json","result","setRepositories","items","setTotalPages","total_count","catch","error","totalPages","localStorage","setItem","String","repositories","JSON","stringify","RepoContextProvider","React","createContext","repoResults","selectedLanguage","toggleStar","id","FilterGroup","props","onClearCache","onShowAll","onFilterStaredRepo","useContext","filterGroupStyle","onClick","onFilterLanguage","LANGUAGES","map","index","Pagination","pageKeys","Array","keys","i","renderPageItem","item","onPageChanged","PaginationStyle","RepositoryCard","html_url","description","stargazers_count","full_name","language","updated_at","repositoryCardStyle","moment","format","RepositoryList","repositoryListStyle","length","SearchInput","useState","searchValue","setSearchValue","searchInputStyle","type","placeholder","onKeyDown","event","key","onSearch","onChange","e","target","value","HomePage","setResults","setCurrentPage","setSelectedLanguage","fetchData","useCallback","page","a","add","Math","min","floor","console","warn","useEffect","onToggleStar","findIndex","rated","state","homePageStyle","Provider","staredRepos","filter","results","getItem","parse","getRepositories","clear","memo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.727c42db.chunk.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/css\";\nconst footerComponentStyle = () =>\n  css`\n    label: footer-wrapper;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 20px 0;\n    img {\n      width: 30px;\n      height: 30px;\n      border-radius: 15px;\n      padding-bottom: 8px;\n    }\n    a {\n      text-decoration: none;\n      padding-left: 4px;\n      color: #a38e80;\n    }\n  `;\nexport const FooterComponent = () => {\n  return (\n    <footer className={footerComponentStyle()}>\n      <img\n        alt=\"avatar\"\n        src=\"https://media0.giphy.com/media/mVJ5xyiYkC3Vm/giphy.gif?cid=790b7611ad2812b1ccf7f99cf2e9764d8ac87928c092140a&rid=giphy.gif\"\n      />\n      <small>\n        Â© 2021 by\n        <a href=\"https://j-nguyenn.github.io/git-trending/\">JASMINE NG </a>\n      </small>\n    </footer>\n  );\n};\n","import { RepositoryCardProps } from \"../components/repository_card/repository_card.interface\";\n\nexport const fetchRepositories = (\n  fromDate: string,\n  currentPage: number,\n  lang?: string,\n  searchQuery?: string\n): Promise<{ total_count: number; items: RepositoryCardProps[] }> => {\n  let query = `q=created:>${fromDate}`;\n  if (lang) {\n    query += `+language:${lang.toLowerCase()}`;\n  }\n  if (searchQuery) {\n    query += searchQuery;\n  }\n  const url = `https://api.github.com/search/repositories?${query}&sort=stars&order=desc&page=${currentPage}`;\n\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((result) => {\n        resolve(result);\n        setRepositories(result?.items);\n        setTotalPages(result?.total_count);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const setTotalPages = (totalPages: number): void => {\n  localStorage.setItem(\"totalPages\", String(totalPages));\n};\n\nexport const getTotalPages = (): number => {\n  const pages = localStorage.getItem(\"totalPages\") ?? \"\";\n  return JSON.parse(pages);\n};\n\nexport const setRepositories = (repositories: RepositoryCardProps[]): void => {\n  if (repositories) {\n    localStorage.setItem(\"repositories\", JSON.stringify(repositories));\n  }\n};\n\nexport const getRepositories = (): RepositoryCardProps[] => {\n  const results = localStorage.getItem(\"repositories\") ?? \"[]\";\n  return JSON.parse(results);\n};\n","import React from \"react\";\n\nconst RepoContextProvider = React.createContext({\n  repoResults: [{}],\n  selectedLanguage: \"\",\n  currentPage: 1,\n  toggleStar: (id: string) => {},\n});\n\nexport default RepoContextProvider;\n","import React, { useContext } from \"react\";\nimport { css } from \"@emotion/css\";\nimport { FilterGroupProps } from \"./filter_group.interface\";\nimport RepoContextProvider from \"../context\";\n\nconst FilterGroup = (props: FilterGroupProps) => {\n  const { onClearCache, onShowAll, onFilterStaredRepo } = props;\n  const { selectedLanguage } = useContext(RepoContextProvider);\n\n  const renderLanguageOptions = () => {\n    return (\n      <div className=\"languages-list\">\n        <div\n          className={`language-item ${!selectedLanguage && \"selected\"}`}\n          onClick={() => {\n            props.onFilterLanguage(\"\");\n          }}\n        >\n          Any\n        </div>\n        {LANGUAGES.map((lang, index) => {\n          return (\n            <div\n              className={`language-item ${\n                selectedLanguage === lang ? \"selected\" : \"\"\n              } `}\n              key={index}\n              onClick={() => {\n                props.onFilterLanguage(lang);\n              }}\n            >\n              {lang}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className={filterGroupStyle()}>\n      <div className=\"section\">\n        <small>Languages: </small>\n        {renderLanguageOptions()}\n      </div>\n\n      <div className=\"section end\">\n        <button className=\"link-btn\" onClick={onClearCache}>\n          Clear cache\n        </button>\n        <button className=\"styled-btn\" onClick={onShowAll}>\n          Show all repo\n        </button>\n        <button className=\"styled-btn star-btn\" onClick={onFilterStaredRepo}>\n          <i className=\"fa fa-star\"></i>\n          Stared repo\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterGroup;\n\nconst filterGroupStyle = () => css`\n  label: filter-group;\n  display: flex;\n  padding-top: 12px;\n  flex-direction: column;\n  .languages-list {\n    padding-left: 4px;\n    display: flex;\n    .language-item {\n      padding: 2px 8px;\n      &: hover {\n        cursor: pointer;\n        background: rgba(27, 31, 35, 0.05);\n      }\n    }\n    .selected {\n      background: rgba(27, 31, 35, 0.08);\n    }\n  }\n  .section {\n    padding-top: 5px;\n    display: flex;\n  }\n  .end {\n    justify-content: flex-end;\n  }\n\n  .styled-btn {\n    border: 0;\n    border-radius: 4px;\n    padding: 4px 8px;\n    margin-right: 4px;\n    margin-left: 4px;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  .star-btn {\n    background: #388bfd;\n    text-align: center;\n    color: #fff;\n  }\n\n  .link-btn {\n    border: 0;\n    background: transparent;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst LANGUAGES = [\"JavaScript\", \"Ruby\", \"HTML\", \"CSS\", \"Typescript\", \"Java\"];\n","import { css } from \"@emotion/css\";\nimport React, { useContext } from \"react\";\nimport RepoContextProvider from \"../context\";\nimport { PaginationProps } from \"./pagination.interface\";\n\nconst Pagination = (props: PaginationProps) => {\n  const { currentPage } = useContext(RepoContextProvider);\n\n  const pageKeys = [...Array(10).keys()].map((i) => i + 1);\n\n  const renderPageItem = (item: number) => {\n    return (\n      <div\n        key={item}\n        className={`page-item ${currentPage === item ? \"selected\" : \"\"}`}\n        onClick={() => {\n          props.onPageChanged(item);\n        }}\n      >\n        {item}\n      </div>\n    );\n  };\n  const renderPagination = () => {\n    return <>{pageKeys.map(renderPageItem)}</>;\n  };\n  return <div className={PaginationStyle()}>{renderPagination()}</div>;\n};\n\nexport default Pagination;\n\nconst PaginationStyle = () => css`\n  label: pagination-card;\n  display: flex;\n  justify-content: center;\n  padding-bottom: 15px;\n  .selected {\n    background: rgba(27, 31, 35, 0.08);\n  }\n  .page-item {\n    padding: 0 5px;\n    &:hover {\n      cursor: pointer;\n      background: rgba(27, 31, 35, 0.05);\n    }\n  }\n`;\n","import { css } from \"@emotion/css\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport RepoContextProvider from \"../context\";\nimport { RepositoryCardProps } from \"./repository_card.interface\";\n\nconst RepositoryCard = (props: RepositoryCardProps) => {\n  const {\n    id,\n    html_url,\n    description,\n    stargazers_count,\n    full_name,\n    language,\n    updated_at,\n  } = props;\n\n  const { toggleStar } = React.useContext(RepoContextProvider);\n\n  return (\n    <div className={repositoryCardStyle()}>\n      <div className=\"repo-left\">\n        <div className=\"repo-star\" onClick={() => toggleStar(id)}>\n          <div className=\"repo-star-number\">{stargazers_count}</div>\n          <span>{stargazers_count > 1 ? \"stars\" : \"star\"}</span>\n        </div>\n        <div className=\"repo-main\">\n          <a href={html_url}>{full_name}</a>\n          <div className=\"repo-description\">{description}</div>\n          <small>Updated at: {moment(updated_at).format(\"DD MMM YYYY\")}</small>\n        </div>\n      </div>\n\n      <div className=\"repo-outro\">\n        <div>{language}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepositoryCard;\n\nconst repositoryCardStyle = () => css`\n  label: repository-card;\n  display: flex;\n  border-radius: 5px;\n  border: 1px solid rgb(232, 232, 232);\n  padding: 6px;\n  margin: 15px 0;\n  flex: 1;\n  justify-content: space-between;\n  text-align: left;\n  font-size: 13px;\n  .repo-left {\n    display: flex;\n    flex-basis: 90%;\n  }\n  .repo-outro {\n    flex-basis: 10%;\n  }\n  .repo-star {\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 10%;\n    .repo-star-number {\n      font-size: 22px;\n    }\n    &:hover {\n      cursor: pointer;\n      color: #388bfd;\n    }\n  }\n  .repo-main {\n    padding-left: 8px;\n    max-width: 86%;\n    max-height: 51px;\n    overflow: hidden;\n    .repo-description {\n      word-break: break-all;\n    }\n  }\n`;\n","import { css } from \"@emotion/css\";\nimport React from \"react\";\nimport RepositoryCard from \"../repository_card/repository_card.component\";\nimport { RepositoryListProps } from \"./repository_list.interface\";\n\nconst RepositoryList = (props: RepositoryListProps) => {\n  const { items } = props;\n\n  return (\n    <div className={repositoryListStyle()}>\n      {!items?.length ? (\n        <div className=\"error-container\">\n          <div>\n            <i className=\"fa fa-frown-o\"></i>\n          </div>\n          Oops! No result found\n        </div>\n      ) : (\n        items.map((item, index) => <RepositoryCard key={index} {...item} />)\n      )}\n    </div>\n  );\n};\n\nexport default RepositoryList;\n\nconst repositoryListStyle = () => css`\n  label: repository-list;\n  .error-container {\n    height: 54vh;\n    padding-top: 24px;\n    color: #ea5252;\n  }\n  .fa-frown-o {\n    font-size: 36px;\n  }\n`;\n","import { css } from \"@emotion/css\";\nimport React from \"react\";\nimport { SearchInputProps } from \"./search_input.interface\";\n\nconst SearchInput = (props: SearchInputProps) => {\n  const [searchValue, setSearchValue] = React.useState<string>(\"\");\n\n  return (\n    <div className={searchInputStyle()}>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            className=\"search-term\"\n            placeholder=\"Search ...\"\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                props.onSearch(searchValue);\n              }\n            }}\n            onChange={(e) => setSearchValue(e.target.value)}\n          ></input>\n          <button\n            type=\"submit\"\n            className=\"searchButton\"\n            onClick={() => props.onSearch(searchValue)}\n          >\n            <i className=\"fa fa-search\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n\nconst searchInputStyle = () => css`\n  label: search-input;\n\n  .search {\n    width: 100%;\n    display: flex;\n  }\n\n  .search-term {\n    width: 100%;\n    border: 3px solid #388bfd;\n    border-right: none;\n    padding: 5px;\n    height: 20px;\n    border-radius: 5px 0 0 5px;\n    outline: none;\n    &:focus {\n      color: #388bfd;\n    }\n  }\n\n  .searchButton {\n    width: 40px;\n    height: 36px;\n    border: 1px solid #388bfd;\n    background: #388bfd;\n    text-align: center;\n    color: #fff;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n    font-size: 20px;\n  }\n`;\n","import { css } from \"@emotion/css\";\nimport moment from \"moment\"; // date-fns\nimport React, { useCallback, useState } from \"react\";\nimport {\n  fetchRepositories,\n  setRepositories,\n  getRepositories,\n} from \"../../actions\";\nimport FilterGroup from \"../../components/filter_group/filter_group.component\";\nimport Pagination from \"../../components/pagination/pagination.component\";\nimport { RepositoryCardProps } from \"../../components/repository_card/repository_card.interface\";\nimport RepositoryList from \"../../components/repository_list/repository_list.component\";\nimport SearchInput from \"../../components/search_input/search_input.component\";\nimport RepoContextProvider from \"../../components/context\";\n\nconst HomePage = () => {\n  const [repoResults, setResults] = useState<RepositoryCardProps[]>([]);\n  const [totalPages, setTotalPages] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(\"\");\n\n  const fetchData = useCallback(\n    async (page: number, lang?: string, searchQuery?: string) => {\n      const fromDate = moment().add(-1, \"w\").format(\"YYYY-MM-DD\");\n      const result = await fetchRepositories(fromDate, page, lang, searchQuery);\n      try {\n        const { items, total_count } = result;\n        setTotalPages(Math.min(Math.floor(total_count / 30), 10));\n        setResults(items);\n      } catch {\n        console.warn(\"error\");\n      }\n    },\n    []\n  );\n\n  React.useEffect(() => {\n    fetchData(1);\n    /* eslint-disable-next-line */\n  }, []);\n\n  const onClearCache = () => {\n    localStorage.clear();\n    fetchData(1);\n  };\n\n  const onToggleStar = useCallback(\n    (id: string) => {\n      const index = repoResults.findIndex((item) => item.id === id);\n\n      if (index !== -1) {\n        if (repoResults[index].rated) {\n          repoResults[index].stargazers_count -= 1;\n          repoResults[index].rated = false;\n        } else {\n          repoResults[index].stargazers_count += 1;\n          repoResults[index].rated = true;\n        }\n      }\n      setResults((state) => {\n        return [...state];\n      });\n      setRepositories(repoResults);\n    },\n    [repoResults]\n  );\n\n  return (\n    <div className={homePageStyle()}>\n      <div className=\"header\">\n        <h1>Git-Trending</h1>\n      </div>\n      <RepoContextProvider.Provider\n        value={{\n          repoResults,\n          toggleStar: onToggleStar,\n          selectedLanguage,\n          currentPage,\n        }}\n      >\n        <SearchInput\n          onSearch={(value) => {\n            fetchData(currentPage, selectedLanguage, value);\n          }}\n        />\n        <FilterGroup\n          onFilterStaredRepo={() => {\n            const staredRepos = repoResults.filter((result) => result.rated);\n            setResults(staredRepos);\n          }}\n          onFilterLanguage={(lang) => {\n            setSelectedLanguage(lang);\n            fetchData(currentPage, lang);\n          }}\n          onShowAll={() => {\n            setResults(getRepositories());\n          }}\n          onClearCache={onClearCache}\n        />\n        <RepositoryList items={repoResults} />\n        <Pagination\n          totalPages={totalPages}\n          onPageChanged={(page) => {\n            setCurrentPage(page);\n            fetchData(page, selectedLanguage);\n          }}\n        />\n      </RepoContextProvider.Provider>\n    </div>\n  );\n};\n\nexport default React.memo(HomePage);\n\nconst homePageStyle = () => css`\n  label: home-page;\n  max-width: 780px;\n  margin: auto;\n`;\n","import React from \"react\";\nimport \"./App.css\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport HomePage from \"./views/home_page/home_page\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n      <FooterComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}